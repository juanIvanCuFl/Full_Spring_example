package com.springboot.gft.accounts.models.controller;

import java.util.List;
import java.util.stream.Collectors;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.springboot.gft.accounts.models.entity.Account;
import com.springboot.gft.accounts.models.entity.Account_pk;
import com.springboot.gft.accounts.models.service.IAccountService;


@RestController
public class AccountController {

	
	@Autowired
	private IAccountService accountService;

	@GetMapping(value = "/")
	public List<Account> listar(HttpServletRequest request){
		return accountService.findAll();
	}
	
	
	@GetMapping(value = "/{accountNumber}/customer/{id_customer}")
	public Account detalle(HttpServletRequest request, @PathVariable("id_customer") Long id,
			@PathVariable("accountNumber") String accountNumber) throws Exception{
		Account_pk pk = new Account_pk(id, accountNumber);
		Account account = accountService.findById(pk);
		return account;
	}
	
	@PostMapping(value="/")
	@ResponseStatus(HttpStatus.CREATED)
	public Account crear(@RequestBody Account account) {
		Account p =  accountService.save(account);
		return p;
	}
	
	@DeleteMapping(value = "/{accountNumber}/customer/{id_customer}")
	@ResponseStatus(HttpStatus.NO_CONTENT)
	public void eliminar(@PathVariable("id_customer") Long id,
			@PathVariable("accountNumber") String accountNumber){
		Account_pk pk = new Account_pk(id, accountNumber);
		accountService.deleteById(pk);
	}
	
	@PutMapping(value = "/{accountNumber}/customer/{id_customer}")
	@ResponseStatus(HttpStatus.NO_CONTENT)
	public Account editar(@RequestBody Account account, @PathVariable("id_customer") Long id,
			@PathVariable("accountNumber") String accountNumber) {
		account.getAccountPk().setIdCustomer(id);
		account.getAccountPk().setAccountNumber(accountNumber);
		return accountService.save(account);
	}
	
}
